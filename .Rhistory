ls
dir
dir()
ls()
library(MASS)
MASS
head(Boston)
lm1 <- lm(crim ~ age, Boston)
lm1 <- lm(crim ~ age, Boston)
lm2 <- lm(crim ~ age + indus, Boston)
anova(lm2,lm1)
summary(lm1)
library(lmer)
lm1 <- lm(crim ~ age, Boston)
lm2 <- lm(crim ~ age + indus, Boston)
anova(lm2,lm1)
summary(lm1)
model <- glm(formula= vs ~ wt + disp, data=mtcars, family=binomial)
summary(model)
model2 <- glm(vs ~ wt, data=matcars, family=binomial)
anova(model, model2)
model2 <- glm(vs ~ wt, data=matcars, family=binomial)
anova(model, model2)
model2 <- glm(vs ~ wt, data=matcars, family=binomial)
model2 <- glm(vs ~ wt, data=mtcars, family=binomial)
anova(model, model2)
anova.glm(model, model2)
library(glmer)
anova.glm(model, model2)
anova.glm(model, model2)
anova(model, model2)
anova(model, model2, test="Chisq")
anova(model, model2, test="Rao")
summary(model)
model2 <- glm(vs ~ wt, data=mtcars, family=binomial)
summary(model2)
model <- glm(formula= vs ~ wt, data=mtcars, family=binomial)
summary(model)
model2 <- glm(vs ~ wt + disp, data=mtcars, family=binomial)
summary(model2)
anova(model, model2, test="Rao")
anova(model, model2, test="LRT")
model <- glm(formula= vs ~ wt, data=mtcars, family=binomial)
summary(model)
model2 <- glm(vs ~ wt + disp, data=mtcars, family=binomial)
summary(model2)
anova(model, model2, test="LRT")
model <- glm(formula= vs ~ wt + disp, data=mtcars, family=binomial)
library(rhdf5)
install.packages("rhdf6")
install.packages("rhdf5")
install.packages("rhdf5r")
install.packages("hdf5r")
#### Model comparison and selection
model <- glm(formula= vs ~ wt, data=mtcars, family=binomial)
summary(model)
model2 <- glm(vs ~ wt + disp, data=mtcars, family=binomial)
summary(model2)
anova(model, model2, test="LRT")
#### Model comparison and selection
model <- glm(formula= vs ~ wt, data=mtcars, family=binomial)
summary(model)
model2 <- glm(vs ~ wt + disp, data=mtcars, family=binomial)
summary(model2)
anova(model, model2, test="LRT")
getwd()
df <- read.csv("featurized.csv")
length(unique(df$id))
View(df)
df[1,]
df <- read.csv("DVC/AITA/data/AITA_cleaned.csv")
getwd()
df <- read.csv("DVC/AITA/Scraper/AITA_cleaned.csv")
View(df)
df$body[50]
df$body
df <- read.csv("DVC/AITA/Scraper/AITA_cleaned.csv")
View(df)
# Remove any that giveaway the answer
df<- df %>%
subset(grepl("(edit|update).*?(a-|ass|\\sta\\s)", body_lower) == TRUE)
library(dplyr)
# Remove any that giveaway the answer
df<- df %>%
subset(grepl("(edit|update).*?(a-|ass|\\sta\\s)", body_lower) == TRUE)
df <- read.csv("DVC/AITA/Scraper/AITA_cleaned.csv")
# Remove any that giveaway the answer
df<- df %>%
subset(grepl("(edit|update).*?(a-|ass|\\sta\\s)", body_lower) == FALSE)
asshole <- df %>%
subset(verdict=="asshole")
nta <- df %>%
subset(verdict=="not the a-hole")
asshole <- df %>%
subset(verdict=="asshole") %>%
mutate(text = paste(title, body))
nta <- df %>%
subset(verdict=="not the a-hole")%>%
mutate(text = paste(title, body))
View(asshole)
asshole <- df %>%
subset(verdict=="asshole") %>%
mutate(text = paste(title, "\n\n", body))
nta <- df %>%
subset(verdict=="not the a-hole")%>%
mutate(text = paste(title, "\n\n",  body))
asshole <- df %>%
subset(verdict=="asshole") %>%
mutate(text = paste(title, "\n\n", body)) %>%
select(c("text","verdict"))
nta <- df %>%
subset(verdict=="not the a-hole")%>%
mutate(text = paste(title, "\n\n",  body)) %>%
select(c("text","verdict"))
View(df)
# Remove any that giveaway the answer
df<- df %>%
subset(grepl("(edit|update).*?(a-|ass|\\sta\\s)", body_lower) == FALSE) %>%
mutate(body = gsub("[.*]","", body))
asshole <- df %>%
subset(verdict=="asshole") %>%
mutate(text = paste(title, "\n\n", body)) %>%
select(c("text","verdict"))
nta <- df %>%
subset(verdict=="not the a-hole")%>%
mutate(text = paste(title, "\n\n",  body)) %>%
select(c("text","verdict"))
View(asshole)
# Remove any that giveaway the answer
df<- df %>%
subset(grepl("(edit|update).*?(a-|ass|\\sta\\s)", body_lower) == FALSE) %>%
mutate(body = gsub("//[.*//]","", body))
asshole <- df %>%
subset(verdict=="asshole") %>%
mutate(text = paste(title, "\n\n", body)) %>%
select(c("text","verdict"))
nta <- df %>%
subset(verdict=="not the a-hole")%>%
mutate(text = paste(title, "\n\n",  body)) %>%
select(c("text","verdict"))
# Remove any that giveaway the answer
df<- df %>%
subset(grepl("(edit|update).*?(a-|ass|\\sta\\s)", body_lower) == FALSE) %>%
mutate(body = gsub("\\[(removed|deleted|aita)\\]","", body))
asshole <- df %>%
subset(verdict=="asshole") %>%
mutate(text = paste(title, "\n\n", body)) %>%
select(c("text","verdict"))
nta <- df %>%
subset(verdict=="not the a-hole")%>%
mutate(text = paste(title, "\n\n",  body)) %>%
select(c("text","verdict"))
View(asshole)
use <- rbind(asshole, nta)
use <- sample(nrow(df))
# Randomly pick
nta_keep_idx <- sample(nrow(asshole))
length(unique(nta_keep_idx))
use <- rbind(asshole, nta[nta_keep_idx,])
use <- use[sample(nrow(use)),]
View(use)
install.packages("jsonlite")
library(jsonlite)
out <- toJson(use)
out <- toJSON(use)
write_json(use, "small_dataset.json")
getwd()
df <- read.csv("DVC/AITA/Scraper/AITA_cleaned.csv")
# Remove any that giveaway the answer
df<- df %>%
subset(grepl("(edit|update).*?(a-|ass|\\sta\\s)", body_lower) == FALSE) %>%
mutate(body = gsub("\\[(removed|deleted|aita)\\]","", body))
asshole <- df %>%
subset(verdict=="asshole") %>%
mutate(text = paste(title, "\n\n", body)) %>%
select(c("text","verdict"))
library(dplyr)
# Remove any that giveaway the answer
df<- df %>%
subset(grepl("(edit|update).*?(a-|ass|\\sta\\s)", body_lower) == FALSE) %>%
mutate(body = gsub("\\[(removed|deleted|aita)\\]","", body))
asshole <- df %>%
subset(verdict=="asshole") %>%
mutate(text = paste(title, "\n\n", body)) %>%
select(c("text","verdict"))
nta <- df %>%
subset(verdict=="not the a-hole")%>%
mutate(text = paste(title, "\n\n",  body)) %>%
select(c("text","verdict"))
library(jsonlite)
small <- read_json("small_dataset.json")
sm <- fromJSON(small)
sm <- jsonlite::fromJSON(small)
sm <- fromJSON("small_dataset.json") %>% as.data.frame
View(sm)
# Smaller df
df_sm <- df %>%
mutate(text = paste(title, "\n\n",  body)) %>%
select(c("text","verdict"))
# Find rows of df_sm that are not in the training set
test <- setdiff(df_sm, sm)
View(test)
# Find rows of df_sm that are not in the training set
test <- setdiff(df_sm, sm) %>% subset(verdict %in% c("asshole","not the a-hole") )
View(test)
table(test$verdict)
a <- test %>%
subset(verdict == "asshole")
nta <- test %>%
subset(verdict == "not the a-hole")
nta_keep_idx <- sample(nrow(a))
n = 1000
a <- test %>%
subset(verdict == "asshole") %>%
sample_n(., n)
nta <- test %>%
subset(verdict == "not the a-hole") %>%
sample_n(.,n)
test <- rbind(a, nta)
write_json(test, "small_test.json")
getwd()
setwd("/Users/elleobrien/DVC/AITA/AITA_Dataset")
df <- read.csv("AITA_cleaned.csv")
View(df)
table(df$verdict)
mom <- df %>%
subset("my mom" in body)
mom <- df %>%
subset("my mom" %in% body)
library(dplyr)
mom <- df %>%
subset("my mom" %in% body)
df$text <- paste(df$title,df$body)
mom <- df %>%
subset("my mom" %in% text)
mom <- df %>%
subset(grepl("my mom",text))
View(mom)
table(mom$verdict)
table(mom$verdict)/nrow(mom)
table(df$verdict)/nrow(df)
mom <- df %>%
subset(grepl("mom|mother|wife",text))
table(mom$verdict)/nrow(mom)
mom <- df %>%
subset(grepl("mom|mother",text))
table(mom$verdict)/nrow(mom)
table(df$verdict)/nrow(df)
getwd()
df <- read.csv("AITA_cleaned.csv")
df$text <- paste(df$title,df$body).tolower()
df$text <- to_lower(paste(df$title,df$body))
df$text <- paste(df$title,df$body)
View(df)
df$text <- paste(df$title,df$body)
mom <- df %>%
subset(grepl("mom|mother",text,ignore.case=TRUE))
table(mom$verdict)/nrow(mom)
table(df$verdict)/nrow(df)
df$contains_mom = grepl("mom|mother",text,ignore.case=TRUE))
df$contains_mom = grepl("mom|mother",text,ignore.case=TRUE)
df$contains_mom = grep("mom|mother",text,ignore.case=TRUE)
df$contains_mom = grep("mom|mother",df$text,ignore.case=TRUE)
df$contains_mom = grepl("mom|mother",df$text,ignore.case=TRUE)
lm(verdict ~ contains_mom, df)
summary(lm(verdict ~ contains_mom, df))
View(df)
summary(lm(is_asshole ~ contains_mom, df))
table(df$is_asshole, df$contains_mom)
4187/(14961+4187)
12476/(31593+12476)
df$contains_dad = grepl("dad|father",df$text,ignore.case=TRUE)
summary(lm(is_asshole ~ contains_dad, df))
